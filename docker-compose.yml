version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fastcart-postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fastcart
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fastcart-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d fastcart -h localhost"]
      interval: 10s
      timeout: 10s  # Aumentado de 5s para 10s
      retries: 10   # Aumentado de 5 para 10
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: fastcart-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fastcart-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastcart-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastcart-api
    ports:
      - "3000:3000"
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/fastcart?schema=public
      - REDIS_URL=redis://redis:6379
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - fastcart-network
    command: npm run start:dev

  fastcart-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fastcart-frontend
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://fastcart-api:3000
    depends_on:
      - fastcart-api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - fastcart-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  fastcart-network:
    driver: bridge